{
  "dataset_reader": {
    "class_name": "squad_dataset_reader",
    "data_path": "{DOWNLOADS_PATH}/squad/"
  },
  "dataset_iterator": {
    "class_name": "squad_iterator",
    "seed": 1337,
    "shuffle": true
  },
  "chainer": {
    "in": [
      "context_raw",
      "question_raw"
    ],
    "in_y": [
      "ans_raw",
      "ans_raw_start"
    ],
    "pipe": [
      {
        "id": "preprocessor",
        "class_name": "torch_bert_preprocessor",
        "vocab_file": "bert-base-cased",
        "do_lower_case": false,
        "max_seq_length": 384,
        "return_tokens": true,
        "in": [
          "question_raw",
          "context_raw"
        ],
        "out": [
          "bert_features",
          "subtokens"
        ]
      },
      {
        "class_name": "squad_bert_mapping",
        "do_lower_case": false,
        "in": [
          "context_raw",
          "bert_features",
          "subtokens"
        ],
        "out": [
          "subtok2chars",
          "char2subtoks"
        ]
      },
      {
        "class_name": "squad_bert_ans_preprocessor",
        "do_lower_case": false,
        "in": [
          "ans_raw",
          "ans_raw_start",
          "char2subtoks"
        ],
        "out": [
          "ans",
          "ans_start",
          "ans_end"
        ]
      },
      {
        "id": "add_value_mem_size",
        "class_name": "add_value",
        "value": "{MEM_SIZE}",
        "in": ["ans_start"],
        "out": ["ans_start_mem"]
      },
      {
        "ref": "add_value_mem_size",
        "in": ["ans_end"],
        "out": ["ans_end_mem"]
      },
      {
        "id": "mem_preprocessor",
        "class_name": "torch_mem_tokens_preprocessor",
        "tokenizer": "#preprocessor.tokenizer",
        "mem_size": "{MEM_SIZE}",
        "mem_tokens_unique": true,
        "in": ["bert_features"],
        "out": ["bert_mem_features"]
      },
      {
        "class_name": "torch_squad_bert_model",
        "pretrained_bert": "bert-base-cased",
        "save_path": "{MODELS_PATH}/model",
        "load_path": "{MODELS_PATH}/model",
        "vocab_size": "#mem_preprocessor.__len__()",
        "optimizer": "AdamW",
        "optimizer_parameters": {
          "lr": 2e-5,
          "weight_decay": 1e-2,
          "betas": [
            0.9,
            0.999
          ],
          "eps": 1e-6
        },
        "learning_rate_drop_patience": 2,
        "learning_rate_drop_div": 2.0,
        "in": [
          "bert_mem_features"
        ],
        "in_y": [
          "ans_start_mem",
          "ans_end_mem"
        ],
        "out": [
          "ans_start_mem_predicted",
          "ans_end_mem_predicted",
          "logits"
        ]
      },
      {
        "id": "add_value_-mem_size",
        "class_name": "add_value",
        "value": "-{MEM_SIZE}",
        "value_type": "int",
        "min_value": 0,
        "in": ["ans_start_mem_predicted"],
        "out": ["ans_start_predicted"]
      },
      {
        "ref": "add_value_-mem_size",
        "in": ["ans_end_mem_predicted"],
        "out": ["ans_end_predicted"]
      },
      {
        "class_name": "squad_bert_ans_postprocessor",
        "in": [
          "ans_start_predicted",
          "ans_end_predicted",
          "context_raw",
          "bert_features",
          "subtok2chars",
          "subtokens"
        ],
        "out": [
          "ans_predicted",
          "ans_start_predicted",
          "ans_end_predicted"
        ]
      }
    ],
    "out": [
      "ans_predicted",
      "ans_start_predicted",
      "logits"
    ]
  },
  "train": {
    "show_examples": false,
    "evaluation_targets": [
      "valid"
    ],
    "log_every_n_batches": 250,
    "val_every_n_batches": 500,
    "batch_size": 10,
    "pytest_max_batches": 2,
    "pytest_batch_size": 5,
    "validation_patience": 10,
    "metrics": [
      {
        "name": "squad_v1_f1",
        "inputs": [
          "ans",
          "ans_predicted"
        ]
      },
      {
        "name": "squad_v1_em",
        "inputs": [
          "ans",
          "ans_predicted"
        ]
      },
      {
        "name": "squad_v2_f1",
        "inputs": [
          "ans",
          "ans_predicted"
        ]
      },
      {
        "name": "squad_v2_em",
        "inputs": [
          "ans",
          "ans_predicted"
        ]
      }
    ],
    "tensorboard_log_dir": "{MODELS_PATH}/logs",
    "class_name": "torch_trainer"
  },
  "metadata": {
    "variables": {
      "ROOT_PATH": "~/.deeppavlov",
      "DOWNLOADS_PATH": "{ROOT_PATH}/downloads",
      "MODELS_PATH": "{ROOT_PATH}/models/squad_torch_bert_mem",
      "MEM_SIZE": 20
    },
    "requirements": [
      "{DEEPPAVLOV_PATH}/requirements/pytorch.txt",
      "{DEEPPAVLOV_PATH}/requirements/transformers.txt"
    ],
    "download": []
  }
}

